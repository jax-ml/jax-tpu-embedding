name: Build and test

on:
  push:
    branches:
    - main
    - test-cache-save # Add this line to trigger on pushes to this branch
  pull_request:

jobs:
  build-and-test-cpu:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          . tools/install_bazelisk.sh

      # This step handles both restore and the post-job save.
      # It runs on pushes to 'main' or 'test-cache-save'.
      - if: github.event_name != 'pull_request'
        name: Mount bazel cache (main/test-save) - Restore & Save
        uses: actions/cache@v4
        with:
          path: "/home/runner/.cache/bazel"
          key: bazel-py3.10-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            bazel-py3.10-${{ github.ref_name }}
            bazel-py3.10-
            bazel-

      # This step is only for pull requests and does NOT trigger a save.
      - if: github.event_name == 'pull_request'
        name: Mount bazel cache (pull-request) - Restore
        uses: actions/cache/restore@v4
        with:
          path: "/home/runner/.cache/bazel"
          key: bazel-py3.10-${{ github.base_ref }}-${{ github.event.pull_request.base.sha }}
          restore-keys: |
            bazel-py3.10-${{ github.base_ref }}
            bazel-py3.10-
            bazel-

      - name: Build all targets
        run: |
          export HERMETIC_PYTHON_VERSION=3.10
          bazel build //... --build_tag_filters=-oss_exclude

      - name: Build pip wheel
        run: |
          export HERMETIC_PYTHON_VERSION=3.10
          bazel run //tools:build_wheel

      - name: Run CPU tests
        run: |
          export HERMETIC_PYTHON_VERSION=3.10
          bazel test --build_tests_only --test_tag_filters=-requires-tpu --test_output=errors --keep_going //...

      # --- START: Cleanup Steps to Free Disk Space Before Cache Save ---
      # These steps will run because github.event_name is 'push' when on 'test-cache-save'.
      - name: Debug Disk Space Before Cleanup
        if: github.event_name != 'pull_request'
        run: |
          echo "--- Disk Usage BEFORE Cleanup ---"
          df -h
          echo ""
          echo "--- Size of /home/runner/.cache/bazel before cleanup ---"
          sudo du -h /home/runner/.cache/bazel | sort -rh | head -n 20
          echo ""
          echo "--- Largest directories in workspace (${{ github.workspace }}) ---"
          sudo du -h ${{ github.workspace }} | sort -rh | head -n 20

      - name: Perform Bazel Clean Expunge
        if: github.event_name != 'pull_request'
        run: |
          echo "Running bazel clean --expunge to reduce the size of the Bazel cache..."
          cd ${{ github.workspace }}
          bazel clean --expunge
          echo "bazel clean --expunge completed."

      - name: Debug Disk Space After Cleanup
        if: github.event_name != 'pull_request'
        run: |
          echo "--- Disk Usage AFTER Cleanup ---"
          df -h
          echo ""
          echo "--- Size of /home/runner/.cache/bazel after expunge ---"
          sudo du -h /home/runner/.cache/bazel | sort -rh | head -n 20
          echo ""
          echo "--- Largest directories in workspace (${{ github.workspace }}) after expunge ---"
          sudo du -h ${{ github.workspace }} | sort -rh | head -n 20
      # --- END: Cleanup Steps ---

      # The 'Post Mount bazel cache (main/test-save) - Restore & Save' action runs automatically AFTER all these steps.
